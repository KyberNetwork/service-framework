name: CI

# Check that your service repo is private if this service-framework repo is also private
# Sample concurrency config:
# concurrency:
#   group: ci-workflow-${{ github.ref }}-${{ github.event_name }}
#   cancel-in-progress: true

on:
  workflow_call:
    inputs:
      service:
        type: string
        required: true

jobs:
  lint:
    runs-on: self-hosted
    steps:
      - name: Add git config for Go private module
        run: git config --global url."https://${{ secrets.GH_PAT }}:x-oauth-basic@github.com/".insteadOf https://github.com/
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52.2
          args: --timeout=10m

  test:
    runs-on: self-hosted
    steps:
      - name: Add git config for Go private module
        run: git config --global url."https://${{ secrets.GH_PAT }}:x-oauth-basic@github.com/".insteadOf https://github.com/
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Run tests
        run: go test -race -coverprofile cover.out -vet=off ./...
      - name: Print coverage
        run: |
          go tool cover -func cover.out | grep total | awk '{notice="Statement Coverage: " substr($3, 1, length($3))} END {print notice}'

  build:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release')
    steps:
      - uses: actions/checkout@v4
      - name: prepare
        id: prepare
        env:
          IMAGE_REPOSITORY: asia.gcr.io/kyber-operation/core/${{ inputs.service }}
        run: |
          #!/bin/bash
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          IMAGE_TAG=${BRANCH_NAME}-$(echo ${GITHUB_SHA::7})
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "image_url=${IMAGE_REPOSITORY}:${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "build_date=$(date +%FT%T%z)" >> $GITHUB_OUTPUT
      - uses: docker/setup-buildx-action@v3
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GCR_CREDENTIALS }}"
      - uses: google-github-actions/setup-gcloud@v1
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ inputs.service }}-buildx
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ steps.prepare.outputs.image_tag }}
            GIT_HASH=${{ github.sha }}
            BUILD_DATE=${{ steps.prepare.outputs.build_date }}
            GH_USER=kyber-ci-bot
          labels: |
            kyber.network.schema-version=1.0
            kyber.network.vcs-ref=${{ github.sha }}
            kyber.network.version=${{ steps.prepare.outputs.image_tag }}
            kyber.network.name=${{ inputs.service }}
          tags: |
            ${{ steps.prepare.outputs.image_url }}
          secrets: |
            "gh_pat=${{ secrets.GH_PAT }}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
