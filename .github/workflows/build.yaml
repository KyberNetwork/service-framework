name: 'Build'

# Check that your service repo is private if this service-framework repo is also private
# Sample permissions and concurrency config:
# permissions: write-all
# concurrency:
#   group: ci-workflow-${{ github.ref }}-${{ github.event_name }}
#   cancel-in-progress: true

on:
  workflow_call:
    inputs:
      cluster:
        description: 'Docker image directory'
        type: string
        default: core
      service:
        description: 'Service repo name'
        type: string
        required: true
      version:
        description: 'Release version'
        type: string
      file:
        description: 'Dockerfile path if not the default one'
        type: string

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: kyber-operation/${{ inputs.cluster }}/${{ inputs.service }}
          tags: |
            type=semver,value=${{ inputs.version }},pattern=v{{version}}
            type=semver,value=${{ inputs.version }},pattern=v{{major}}.{{minor}}
            type=semver,value=${{ inputs.version }},pattern=v{{major}}
            type=ref,event=branch
            type=raw,value={{branch}}-{{sha}},enable=${{ github.event_name == 'push' }}
          labels: |
            kyber.network.schema-version=1.0
            kyber.network.name=${{ inputs.service }}
            kyber.network.version=${{ steps.prepare.outputs.version_tag }}
            kyber.network.vcs-ref=${{ github.sha }}
      # - uses: docker/setup-buildx-action@v3
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCR_CREDENTIALS }}"
      # - uses: google-github-actions/setup-gcloud@v2
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.file }}
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            GH_USER=kyber-ci-bot
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          secrets: |
            "gh_pat=${{ secrets.GH_PAT }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
