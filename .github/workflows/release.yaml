name: 'Release'

# Check that your service repo is private if this service-framework repo is also private
# Sample concurrency config:
# concurrency:
#   group: ci-workflow-${{ github.ref }}-${{ github.event_name }}
#   cancel-in-progress: true

on:
  workflow_call:
    inputs:
      cluster:
        description: 'Docker image directory'
        type: string
        default: core
      service:
        description: 'Service repo name'
        type: string
        required: true
      service_name:
        description: 'Release service name'
        type: string
        required: true
      version:
        description: 'Release version'
        type: string
        required: true
      create_tag:
        description: 'Whether to create tag and release'
        type: boolean
        default: true
      file:
        description: 'Dockerfile path if not the default one'
        type: string

jobs:
  build:
    uses: ./.github/workflows/build.yaml
    with:
      cluster: ${{ inputs.cluster }}
      service: ${{ inputs.service }}
      version: ${{ inputs.version }}
      file: ${{ inputs.file }}
    secrets: inherit
  tag:
    runs-on: self-hosted
    needs: build
    if: inputs.create_tag && needs.build.outputs.create_tag != ''
    env:
      VERSION_TAG: ${{ needs.build.outputs.create_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Create tag
        # language=bash
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git tag --delete "$VERSION_TAG" 2> /dev/null || echo "Release tag '$VERSION_TAG' does NOT exist"
          git tag --annotate --message "${{ inputs.service }} $VERSION_TAG" "$VERSION_TAG"
          git push origin "refs/tags/$VERSION_TAG"
      - uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_PAT }}
          tag_name: ${{ env.VERSION_TAG }}
          name: "${{ inputs.service_name }} ${{ env.VERSION_TAG }}"
